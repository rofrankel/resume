{
  "name": "swag",
  "version": "0.7.0",
  "author": {
    "name": "Elving Rodriguez",
    "email": "elving.pr@gmail.com"
  },
  "description": "Give your handlebars.js templates some swag son!",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/elving/swag.git"
  },
  "keywords": [
    "swag",
    "handlebars",
    "templates",
    "helpers",
    "utilities"
  ],
  "dependencies": {
    "handlebars": "1.x"
  },
  "devDependencies": {
    "coffee-script": "~1.6.3",
    "uglify-js": ">=2.3.6",
    "mocha": ">=1.10.0",
    "should": ">=1.2.2"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/elving/swag/master/LICENSE"
    }
  ],
  "engine": {
    "node": ">=0.6.17"
  },
  "readme": "# Swag\n\n[![NPM](https://nodei.co/npm/swag.png?downloads=true&stars=true)](https://nodei.co/npm/swag/)\n\nSwag is a growing collection of helpers for [Handlebars.js](https://github.com/wycats/handlebars.js/). Give your handlebars.js templates some swag son!\n\n## Usage\n    <!-- Browser -->\n    <script src=\"../path_to/handlebars.js\"></script>\n    <script src=\"../path_to/swag.js\"></script>\n    <script>Swag.registerHelpers(Handlebars);</script>\n\n    // Node\n    Handlebars = require('handlebars');\n    Swag = require('swag');\n\n    Swag.registerHelpers(Handlebars);\n\n## Swag.registerHelpers\nThis method will register all Swag helpers with the instance of Handlebars you pass to it.\n\n    <script src=\"../path_to/handlebars.js\"></script>\n    <script src=\"../path_to/swag.js\"></script>\n    <script>Swag.registerHelpers(window.Handlebars);</script>\n\nIf you don't pass any instance of Handlebars, Swag will use the Handlebars\ninstace available in the global context.\n\n    <script src=\"../path_to/handlebars.js\"></script>\n    <script src=\"../path_to/swag.js\"></script>\n    <script>\n        // Will use window.Handlebars or Ember.Handlebars if you're using Ember.\n        Swag.registerHelpers();\n    </script>\n\nThis method must be called in order to use Swag helpers in you Handlebars templates.\n\n## Context\nIf you have functions in your template's context, Swag will execute the function and use the returned value inside the helper:\n\n    context = {\n        firstName: function() { return 'elving'; }\n        lastName: 'Rodríguez'\n    };\n\n    {{uppercase firstName}} {{lowercase lastName}}\n\n    ELVING rodríguez\n\nIf you pass a string to a Number, Math or any helper that needs a number to work, Swag will try to convert it to a number and use it:\n\n    context = {\n        age: '24'\n    };\n\n    {{add age '1'}}\n\n    25\n\n## Strings\n\n#### lowercase\n\nTurns a string to lowercase.\n\nParameters: none.\n\nUsage:\n\n    {{lowercase \"BENDER SHOULD NOT BE ALLOWED ON TV\"}}\n\n    bender should not be allowed on tv\n\n#### uppercase\n\nTurns a string to uppercase. Opposite of `{{lowercase}}`.\n\nParameters: none.\n\nUsage:\n\n    {{uppercase \"bender should not be allowed on tv\"}}\n\n    BENDER SHOULD NOT BE ALLOWED ON TV\n\n#### capitalizeFirst\n\nCapitalizes the firs word in a string.\n\nParameters: none.\n\nUsage:\n\n    {{capitalizeFirst \"bender should not be allowed on TV\"}}\n\n    Bender should not be allowed on TV\n\n#### capitalizeEach\n\nCapitalizes each word in a string.\n\nParameters: none.\n\nUsage:\n\n    {{capitalizeEach \"bender should NOT be allowed on TV\"}}\n\n    Bender Should NOT Be Allowed On TV\n\n#### titleize\n\nCapitalizes all words within a string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel).\n\nParameters: none.\n\nUsage:\n\n    {{titleize \"Bender-should-Not-be-allowed_on_Tv.\"}}\n\n    Bender Should Not Be Allowed On Tv.\n\n#### sentence\n\nCapitalizes the first word of each sentence in a string and converts the rest of the sentence to lowercase.\n\nParameters: none.\n\nUsage:\n\n    {{sentence \"bender should NOT be allowed on TV. fry SHOULD be allowed on TV.\"}}\n\n    Bender should not be allowed on tv. Fry should be allowed on tv.\n\n#### reverse\n\nReverses a string.\n\nParameters: none.\n\nUsage:\n\n    {{reverse \"bender should NOT be allowed on TV.\"}}\n\n    .VT no dewolla eb TON dluohs redneb\n\n#### truncate\n\nTruncates a string given a specified `length`, providing a custom string to denote an `omission`.\n\nParameters:\n\n    length [int] - The number of characters to keep (Required)\n    omission [string] - A string to denote an omission (Optional)\n\nUsage:\n\n    {{truncate \"Bender should not be allowed on tv.\" 31 \"...\"}}\n\n    Bender should not be allowed...\n\n#### center\n\nCenters a string using non-breaking spaces.\n\nParameters:\n\n    spaces [int] - The number of spaces. (Required)\n\nUsage:\n\n    {{center \"Bender should not be allowed on tv.\" 10}}\n\n              Bender should not be allowed on tv.\n\n#### newLineToBr\n\nConverts new line characters `\\n` to line breaks `<br>`.\n\nParameters: none.\n\nUsage:\n\n    {{{newLineToBr \"Bender \\n should \\n not \\n be allowed on tv.\"}}}\n\n    Bender <br> should <br> not <br> be allowed on tv.\n\n#### sanitize\n\nSanitizes strings for safe use in URLs and file names.\n\nParameters:\n\n    replacement [string] - A replacement character (Optional)\n\nUsage:\n\n    {{{sanitize \"Sex & The City 2\" \"-\"}}}\n\n    Sex---The-City-2\n\n## Collections\n\n#### first\n\nReturns the first item in a collection.\n\nParameters: none.\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{first collection}}\n\n    Amy Wong\n\n#### withFirst\n\nUse the first item in a collection inside a block.\n\nParameters: none.\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{#withFirst collection}}\n        <p>{{this}} is smart.</p>\n    {{/withFirst}}\n\n    <p>Amy Wong is smart.</p>\n\n#### last\n\nReturns the last item in a collection. Opposite of `first`.\n\nParameters: none.\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{last collection}}\n\n    Scruffy\n\n#### withLast\n\nUse the last item in a collection inside a block. Opposite of `withFirst`.\n\nParameters: none.\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{#withLast collection}}\n        <p>{{this}} is lazy.</p>\n    {{/withLast}}\n\n    <p>Scruffy is lazy.</p>\n\n#### after\n\nReturns all of the items in the collection after the specified count.\n\nParameters:\n\n    count [int] - How many items to omit from the beginning. (Required)\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{after collection 5}}\n\n    Leela, Professor Farnsworth, Scruffy\n\n#### withAfter\n\nUse all of the items in the collection after the specified count inside a block.\n\nParameters:\n\n    count [int] - How many items to omit from the beginning. (Required)\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{#withAfter collection 5}}\n        {{titleize this}}\n    {{/withAfter}}\n\n    Leela Professor Farnsworth Scruffy\n\n#### before\n\nReturns all of the items in the collection before the specified count. Opposite of `after`.\n\nParameters:\n\n    count [int] - How many items to omit from the end. (Required)\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{before collection 5}}\n\n    Amy Wong, Bender, Dr. Zoidberg\n\n#### withBefore\n\nUse all of the items in the collection before the specified count inside a block. Opposite of `withAfter`.\n\nParameters:\n\n    count [int] - How many items to omit from the end. (Required)\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{#withBefore collection 5}}\n        {{reverse this}}\n    {{/withBefore}}\n\n    gnoW ymA redneB grebdioZ .rD\n\n#### join\n\nJoins all elements of a collection into a string using a separator if specified.\n\nParameters:\n\n    separator [string] - A string to use as a separator between the items. (Optional)\n\nUsage:\n\n    collection = ['Amy Wong', 'Bender', 'Dr. Zoidberg', 'Fry', 'Hermes Conrad', 'Leela', 'Professor Farnsworth', 'Scruffy']\n\n    {{join collection \" & \"}}\n\n    Amy Wong & Bender & Dr. Zoidberg & Fry & Hermes Conrad & Leela & Professor Farnsworth & Scruffy\n\n#### sort\n\nReturns the collection sorted.\n\nParameters:\n\n    none.\n\nUsage:\n\n    collection = ['Dr. Zoidberg', 'Fry', 'Amy Wong', 'Professor Farnsworth', 'Bender', 'Hermes Conrad', 'Leela', 'Scruffy']\n\n    {{sort collection}}\n\n    Amy Wong, Bender, Dr. Zoidberg, Fry, Hermes Conrad, Leela, Professor Farnsworth, Scruffy\n\n#### withSort\n\nUses the sorted collection inside the block.\n\nParameters:\n\n    field [string] - String name of the field or property to sort by. (Optional)\n\nUsage:\n\n    collection = [\n            name: 'Leela'\n            deliveries: 8021\n        ,\n            name: 'Bender'\n            deliveries: 239\n        ,\n            name: 'Fry'\n            deliveries: -12\n    ]\n\n    {{#withSort collection \"deliveries\"}}\n        {{name}}: {{deliveries}} <br>\n    {{/withSort}}\n\n    Fry: -12\n    Bender: 239\n    Leela: 8021\n\n#### length\n\nReturns the length of the collection.\n\nParameters: none.\n\n    collection = ['Dr. Zoidberg', 'Fry', 'Amy Wong', 'Professor Farnsworth', 'Bender', 'Hermes Conrad', 'Leela', 'Scruffy']\n\n    {{length collection}}\n\n    8\n\n#### lengthEqual\n\nConditionally render a block based on the length of a collection.\n\nParameters:\n\n    length [int] - The value to test against. (Required)\n\nUsage:\n\n    collection = [\n            name: 'Leela'\n            deliveries: 8021\n        ,\n            name: 'Bender'\n            deliveries: 239\n        ,\n            name: 'Fry'\n            deliveries: -12\n    ]\n\n\n    {{#lengthEqual collection 3}}\n        There are 3 people in Planet Express.\n    {{else}}\n        This is not Planet Express.\n    {{/lengthEqual}}\n\n    There are 3 people in Planet Express.\n\n### empty\n\nConditionally render a block if the collection is empty.\n\nParameters: none.\n\nUsage:\n\n    collection = []\n\n    {{#empty collection}}\n        Good news everyone!\n    {{else}}\n        Bad news everyone!\n    {{/empty}}\n\n    Good news everyone!\n\n### any\n\nConditionally render a block if the collection isn't empty. Opposite of `empty`\n\nParameters: none.\n\nUsage:\n\n    collection = ['Professor Farnsworth']\n\n    {{#any collection}}\n        Good news everyone!\n    {{else}}\n        Bad news everyone!\n    {{/any}}\n\n    Good news everyone!\n\n### inArray\n\nConditionally render a block if a specified value is in the collection.\n\nParameters:\n\n    value [string|int] - A value to test against. (Required)\n\nUsage:\n\n    collection = ['Professor Farnsworth', 'Fry', 'Bender']\n\n    {{#inArray collection \"Fry\"}}\n        I'm walking on sunshine!\n    {{else}}\n        I'm walking on darkness.\n    {{/inArray}}\n\n    I'm walking on sunshine!\n\n### eachIndex\n\nRenders a block using the array and each item's index.\n\nParameters: none.\n\nUsage:\n\n    collection = ['Professor Farnsworth', 'Fry', 'Bender']\n\n    {{#eachIndex collection}}\n        {{item}} is {{index}}\n    {{/eachIndex}}\n\n    Professor Farnsworth is 0, Fry is 1, Bender is 2\n\n### eachProperty\n\nUses the key and value of each property in an object to render a block.\n\nParameters: none.\n\nUsage:\n\n    collection = fry: 3, bender: 120\n\n    {{#eachProperty collection}}\n        {{key}} - {{value}}\n    {{/eachProperty}}\n\n    fry - 3 bender - 120\n\n## Math\n\n#### add\n\nReturns the sum of two numbers.\n\nParameters:\n\n    value [int] - The number to add to the expression. (Required)\n\nUsage:\n\n    value = 5\n\n    {{add value 5}}\n\n    10\n\n#### subtract\n\nReturns the difference of two numbers. Opposite of `add`\n\nParameters:\n\n    value [int] - The number to subtract from the expression. (Required)\n\nUsage:\n\n    value = 5\n\n    {{subtract value 5}}\n\n    0\n\n#### divide\n\nReturns the division of two numbers.\n\nParameters:\n\n    value [int] - The number to divide the expression. (Required)\n\nUsage:\n\n    value = 5\n\n    {{divide value 5}}\n\n    1\n\n#### multiply\n\nReturns the multiplication of two numbers.\n\nParameters:\n\n    value [int] - The number to multiply the expression. (Required)\n\nUsage:\n\n    value = 5\n\n    {{multiply value 5}}\n\n    25\n\n#### floor\n\nReturns the value rounded down to the nearest integer.\n\nParameters: none.\n\nUsage:\n\n    value = 5.6\n\n    {{floor value}}\n\n    5\n\n#### ceil\n\nReturns the value rounded up to the nearest integer.\n\nParameters: none.\n\nUsage:\n\n    value = 5.6\n\n    {{ceil value}}\n\n    6\n\n#### round\n\nReturns the value rounded to the nearest integer.\n\nParameters: none.\n\nUsage:\n\n    value = 5.69\n\n    {{round value}}\n\n    6\n\n## Numbers\n\n#### toFixed\n\nReturns exactly `digits` after the decimal place. The number is rounded if necessary, and the fractional part is padded with zeros if necessary so that it has the specified length.\n\nParameters:\n\n    digits [int] - The number of digits to appear after the decimal point. (Optional)\n\nUsage:\n\n    value = 5.53231\n\n    {{toFixed value 3}}\n\n    5.532\n\n#### toPrecision\n\nReturns the number in fixed-point or exponential notation rounded to `precision` significant digits.\n\nParameters:\n\n    precision [int] - The number of digits. If omitted, it returns the entire number (without any formatting). (Optional)\n\nUsage:\n\n    value = 555.322\n\n    {{toPrecision value 4}}\n\n    555.3\n\n\n#### toExponential\n\nReturns the number in exponential notation with one digit before the decimal point, rounded to `fractions` digits after the decimal point.\n\nParameters:\n\n    fractions [int] - An integer specifying the number of digits after the decimal point. (Optional)\n\nUsage:\n\n    value = 5\n\n    {{toExponential value 5}}\n\n    5.00000e+0\n\n#### toInt\n\nReturns an integer.\n\nParameters: none.\n\nUsage:\n\n    value = '22.2abc'\n\n    {{toInt value}}\n\n    22\n\n#### toFloat\n\nReturns a floating point number.\n\nParameters: none.\n\nUsage:\n\n    value = '22.2abc'\n\n    {{toFloat value}}\n\n    22.2\n\n#### digitGrouping\n\nAdds thousands separator to a number.\n\nParameters:\n\n    separator [string] - A string to use as a digit group separator. (Optional)\n\nUsage:\n\n    value = 2222222\n\n    {{digitGrouping value}}\n\n    2,222,222\n\n####\n\n## Comparisons\n\n#### is\n\nConditionally render a block if the condition is true.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#is number 5}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/is}}\n\n    Kiss my shiny metal ass!\n\n#### isnt\n\nConditionally render a block if the condition is false. Opposite of `is`.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#isnt number 5}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/isnt}}\n\n    Never mind :(\n\n#### gt\n\nConditionally render a block if the value is greater than a given number.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#gt number 8}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/gt}}\n\n    Never mind :(\n\n#### gte\n\nConditionally render a block if the value is greater or equal than a given number.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#gte number 5}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/gte}}\n\n    Kiss my shiny metal ass!\n\n#### lt\n\nConditionally render a block if the value is less than a given number. Opposite of `gt`.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#lt number 3}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/lt}}\n\n    Never mind :(\n\n#### lte\n\nConditionally render a block if the value is less or equal than a given number. Opposite of `gte`.\n\nParameters:\n\n    value [string|int] - the value to test against.\n\nUsage:\n\n    number = 5\n\n    {{#lte number 5}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/lte}}\n\n    Kiss my shiny metal ass!\n\n#### or\n\nConditionally render a block if one of the values is truthy.\n\nParameters:\n\n    values [string|int] - the values to test against.\n\nUsage:\n\n    great = no\n    magnificent = true\n\n    {{#or great magnificent}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/or}}\n\n    Kiss my shiny metal ass!\n\n#### and\n\nConditionally render a block if both values are truthy.\n\nParameters:\n\n    values [string|int] - the values to test against.\n\nUsage:\n\n    great = true\n    magnificent = true\n\n    {{#and great magnificent}}\n        Kiss my shiny metal ass!\n    {{else}}\n        Never mind :(\n    {{/and}}\n\n    Kiss my shiny metal ass!\n\n## Dates\n\n#### formatDate\n\nFormats a date into a string given a format. Accepts any value that can be passed to `new Date()`. This helper is a port of the [formatDate-js](http://https://github.com/michaelbaldry/formatDate-js) library by [Michael Baldry](https://github.com/michaelbaldry).\n\nParameters:\n\n    format [string] - The format string, according to these tokens: (http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime) (Required)\n\nUsage:\n\n    date = new Date()\n\n    {{formatDate date \"%m/%d/%Y\"}}\n    {{formatDate date \"%I:%M%p\"}}\n    {{formatDate date \"%F\"}}\n    {{formatDate date \"%Y%m%dT%H%M%S%z\"}}\n\n    07/26/2012\n    11:38PM\n    2012-07-26\n    20120726T233805-0004\n\n#### now\n\nReturns the current date.\n\nParameters:\n\n    format [string] - The format string, according to these tokens: http://www.ruby-doc.org/core-1.9.3/Time.html#method-i-strftime (Optional)\n\nUsage:\n\n    {{now}}\n    {{now \"%m/%d/%Y\"}}\n\n    Thu Jul 26 2012 23:41:02 GMT-0400 (AST)\n    07/26/2012\n\n#### timeago\n\nReturns a human-readable time phrase from the given date.\n\nParameters: none.\n\nUsage:\n\n    date = 'Thu Jul 22 2012 23:41:02 GMT-0400 (AST)'\n\n    {{timeago date}}\n\n    4 days ago\n\n## Inflections\n\n#### inflect\n\nReturns the plural or singular form of a word based on a count.\n\nParameters:\n\n    singular [string] - The singular form of the word. (Required)\n    plural [string] - The plural form of the word. (Required)\n    include [boolean] - whether or not to include the count before the word. (Optional)\n\nUsage:\n\n    enemies = 0\n    friends = 1\n\n    {{inflect enemies \"enemy\" \"enemies\"}}\n    {{inflect friends \"friend\" \"friends\" true}}\n\n    enemies\n    1 friend\n\n#### ordinalize\n\nTurns a number into an ordinal string. Taken from the templating library [Walrus](https://github.com/jeremyruppel/walrus) by [Jeremy Ruppel](https://github.com/jeremyruppel).\n\nParameters: none.\n\nUsage:\n\n    {{ordinalize 3}}\n    {{ordinalize 1}}\n    {{ordinalize 22}}\n\n    3rd\n    1st\n    22nd\n\n## HTML\n\n#### ul\n\nCreates an unordered list.\n\nParameters:\n\n    hash [html attributes] - HTML attributes to use on the ul element. (Optional)\n\nUsage:\n\n    collection = [\n            name: 'Leela'\n            deliveries: 8021\n        ,\n            name: 'Bender'\n            deliveries: 239\n        ,\n            name: 'Fry'\n            deliveries: 1\n    ]\n\n    {{#ul collection class=\"deliveries-list\"}}\n        {{name}} - {{inflect deliveries \"delivery\" \"deliveries\" true}}\n    {{/ul}}\n\n    <ul class=\"deliveries-list\">\n        <li>\n            Leela - 8021 deliveries\n        </li>\n        <li>\n            Bender - 239 deliveries\n        </li>\n        <li>\n            Fry - 1 delivery\n        </li>\n    </ul>\n\n#### ol\n\nSame as the `ul` helper but creates and ordered list.\n\n#### br\n\nReturns `<br>` tags based on a count.\n\nParameters:\n\n    count [int] - The number of `br` elements to render. (Optional)\n\nUsage:\n\n    {{br 5}}\n\n    <br><br><br><br><br>\n\n## Logging\n\n#### log\n\nSimple console.log()\n\nParameters: none.\n\nUsage:\n\n    {{log \"Hi console :)\"}}\n\n    Hi console :)\n\n#### debug\n\nSimple console.debug() that shows the current context.\n\nParameters: none.\n\nUsage:\n\n    collection = [\n            name: 'Leela'\n            deliveries: 8021\n        ,\n            name: 'Bender'\n            deliveries: 239\n        ,\n            name: 'Fry'\n            deliveries: 1\n    ]\n\n    {{#withFirst collection}}\n        {{debug name}}\n    {{/withFirst}}\n\n    Context: { deliveries: 8021, name: \"Leela\" }\n    Value: Leela\n    -----------------------------------------------\n\n## Miscellaneous\n\n#### default\n\nProvides a default or fallback value if a value doesn't exist.\n\nParameters:\n\n    defaultValue [string|int] - The default value to use.\n\nUsage:\n\n    title = ''\n\n    {{default title \"Not title available.\"}}\n\n    Not title available.\n\n#### partial\n\nProvides an easy way to register and use partials from inside your templates. It supports AMD and CommonJS if you are writing your templates as modules. If your module returns a string, set `Swag.Config.precompiledTemplates = false` so that Swag appends `!text` before your module's path for AMD. If all of your templates are on the same path you can override `Swag.Config.partialsPath = 'path/'` and only use your template's name as your partial name. If your templates are on different paths then use the full path as your partial's name.\n\nIf you are not using AMD or CommonJS modules you can pass a third argument that will contain your template. If the argument is a function, Swag will treat it as a compiled Handlebar template.\n\nIf you are using `Ember`, the `partial` helper will not be registered to avoid collisions with the `partial` helper from `Ember`.\n\nParameters:\n\n    name [string] - The name or path of the file in which your template is define. You can tell swag where your templates folder is by overriding Swag.Config.partialsPath. (Required)\n\n    data [int|string|collection] - The data you want to use inside the partial. (Optional)\n\n    template [string|function] - The template for you partial. Pass this if you are not using AMD or CommonJS modules. (Optional)\n\nUsage:\n\n    Swag.Config.partialsPath = '../views/templates/'\n\n    collection = ['Professor Farnsworth', 'Fry', 'Bender']\n\n    # Your Partial (planet_express.hbs)\n    {{sort this}}\n\n    # Your template\n    <p>\n        {{partial \"planet_express\" collection}}\n    </p>\n\n    <p>Bender, Fry, Professor Farnsworth</p>\n\n<br>\n\n    # Your template data\n    context =\n        data: ['Professor Farnsworth', 'Fry', 'Bender']\n        template: '<p>{{sort this}}</p>'\n\n    # Your template\n    {{partial \"planet_express\" data template}}\n\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/elving/swag/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/elving/swag/issues"
  },
  "_id": "swag@0.7.0",
  "dist": {
    "shasum": "d75e746f4fb83c011d5486975e764a50a405ec94"
  },
  "_from": "https://registry.npmjs.org/swag/-/swag-0.7.0.tgz",
  "_resolved": "https://registry.npmjs.org/swag/-/swag-0.7.0.tgz"
}
